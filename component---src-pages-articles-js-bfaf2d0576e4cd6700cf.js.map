{"version":3,"file":"component---src-pages-articles-js-bfaf2d0576e4cd6700cf.js","mappings":"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","sources":["webpack://gatsby-starter-tailwind/./src/pages/articles.js"],"sourcesContent":["\nimport React, { useState } from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\";\nimport ContentWidth from \"../components/contentWidth\";\nimport SEO from \"../components/seo\";\n\nconst ArticlesPage = ({ data }) => {\n\n  const [filter, setFilter] = useState(\"all\");\n\n  const whichArticlesToRender = () => {\n    const allArticles = data.allArticlesJson.nodes\n    let articlesToRenderArray\n    if ( filter === \"all\" ) {\n      articlesToRenderArray = allArticles\n    } else {\n      articlesToRenderArray = allArticles.filter( article => article.categories.includes(filter) )\n    }\n    return articlesToRenderArray\n  }\n\n\n  return(\n\n    <Layout>\n      <SEO\n        keywords={[`articles`, `tom`, `waterton`, `content`, `design`]}\n        title=\"Articles\"\n      />\n\n      <ContentWidth>\n        <section className=\"\">\n          <div className=\"column\">\n            <h1>Articles</h1>\n          </div>\n        </section>\n        <section className=\"row xs:hidden\">\n            <div id=\"myBtnContainer\" className=\"flex float-right\">\n              <div>\n                <button className={`btn ${ filter === \"all\" ? \"active\" : null }`} onClick={() => setFilter(\"all\")}>all articles</button>\n                <button className={`btn ${ filter === \"brewing\" ? \"active\" : null}`} onClick={() => setFilter(\"brewing\")}>brewing</button>\n                <button className={`btn ${ filter === \"comms\" ? \"active\" : null}`} onClick={() => setFilter(\"comms\")}>communication</button>\n                <button className={`btn ${ filter === \"content\" ? \"active\" : null}`} onClick={() => setFilter(\"content\")}>content</button>\n                <button className={`btn ${ filter === \"culture\" ? \"active\" : null}`} onClick={() => setFilter(\"culture\")}>culture</button>\n                <button className={`btn ${ filter === \"design\" ? \"active\" : null}`} onClick={() => setFilter(\"design\")}>design</button>\n                <button className={`btn ${ filter === \"growth\" ? \"active\" : null}`} onClick={() => setFilter(\"growth\")}>growth</button>\n              </div>\n            </div>\n        </section>\n\n        <section className=\"flex flex-col md:flex-row padding-bottom\">\n          <ul className=\"c-tile-list\">\n            <RenderArticles articles={whichArticlesToRender()} />\n          </ul>\n        </section>\n\n      </ContentWidth>\n    </Layout>\n\n  )\n}\n\nexport const query = graphql`\n  {\n    allArticlesJson {\n      nodes {\n        title\n        subTitle\n        url\n        image\n        mins\n        date\n        categories\n      }\n    }\n  }\n`\n\nexport default ArticlesPage\n\n\n\n\nclass RenderArticles extends React.Component {\n  render() {\n    return(\n      this.props.articles.map( (article,i) => (\n        <ArticleTile\n          key={article.title}\n          title={article.title}\n          subTitle={article.subTitle}\n          url={article.url}\n          image={article.image}\n          mins={article.mins}\n          date={article.date}\n        />\n      ))\n    )\n  }\n}\n\n\n\nclass ArticleTile extends React.Component {\n  render() {\n    return(\n      <li key={this.props.key} className=\"c-tile-list__item\">\n        <article className=\"c-article-tile col3\" itemscope itemtype=\"http://schema.org/Article\">\n          <div className=\"c-article-tile__header\">\n            <a href={this.props.url}>\n              <img className=\"article-thumbnail\"\n                alt=\"Article image\"\n                src={`../images/articles/${this.props.image}`}\n              />\n            </a>\n          </div>\n\n          <div className=\"c-article-tile__body\">\n            <div>\n              <h2 className=\"c-article-tile__title\" itemprop=\"headline\">\n                <a href={this.props.url}>{this.props.title}</a>\n              </h2>\n              <p className=\"article-subhead\">{this.props.subTitle}</p>\n            </div>\n          </div>\n\n          <footer className=\"c-article-tile__footer\">\n            <span className=\"c-article-tile__read-time\" itemprop=\"readTime\">\n              {this.props.mins} min read\n            </span>\n\n            <span className=\"c-article-tile__date\" itemprop=\"datePublished\">\n              {this.props.date}\n            </span>\n          </footer>\n        </article>\n      </li>\n    )\n  }\n}"],"names":["_ref","data","filter","setFilter","useState","React","Layout","SEO","keywords","title","ContentWidth","className","id","onClick","RenderArticles","articles","whichArticlesToRender","allArticles","allArticlesJson","nodes","articlesToRenderArray","article","categories","includes","_React$Component","apply","arguments","_inheritsLoose","prototype","render","this","props","map","i","ArticleTile","key","subTitle","url","image","mins","date","_React$Component2","itemscope","itemtype","href","alt","src","itemprop"],"sourceRoot":""}